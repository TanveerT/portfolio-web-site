{"version":3,"sources":["images/EDIT-min.jpg","component/Header.js","component/SideDrawer/DrawerToggleButton.js","component/Responsive.js","component/SideDrawer/Backdrop.js","component/SideDrawer/SideDrawer.js","component/Navbar.js","data/quots.js","component/Quots.js","component/Slider.js","component/Education.js","component/About.js","component/Projects.js","component/Writing.js","component/Contact.js","component/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","useState","Loading","setLoading","console","log","className","style","background","count","onLoad","src","photo","alt","to","DrawerToggleButton","props","onClick","c","Responsive","clickHandler","Backdrop","SideDrawer","drawerClasses","show","Navbar","back","sideDrawer","setsideDrawer","quots","quote","author","Quots","Slider","setCount","loadRef","useRef","useEffect","id","width","setInterval","clearInterval","current","move","timer","setTimeout","length","clearTimeout","ref","Education","About","Projects","Writing","Contact","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,sC,gcC8E5BC,G,MAxEA,WAAO,IAAD,EACWC,oBAAS,GADpB,mBACZC,EADY,KACHC,EADG,KAInB,OAFAC,QAAQC,IAAIH,GAGV,yBAAKI,UAAU,UACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,2BACb,yBACEA,UAAU,eACVC,MAAOL,EAAU,CAAEM,WAAY,SAAY,CAAEA,WAAY,UAExDN,EAAU,KAAO,kBAAC,IAAD,CAAUO,MAAO,KAEnC,yBACEH,UAAU,eACVI,OAAQR,EAAU,KAAOC,GAAW,GACpCQ,IAAKC,IACLC,IAAI,iBAIV,yBAAKP,UAAU,iBACb,4BACE,0BAAMA,UAAU,IAAhB,KACA,0BAAMA,UAAU,IAAhB,KACA,0BAAMA,UAAU,IAAhB,KAEA,6BACA,0BAAMA,UAAU,IAAhB,KACA,0BAAMA,UAAU,IAAhB,KACA,0BAAMA,UAAU,IAAhB,KACA,0BAAMA,UAAU,UAAhB,KACA,0BAAMA,UAAU,QAAhB,KACA,0BAAMA,UAAU,QAAhB,KACA,0BAAMA,UAAU,QAAhB,KACA,0BAAMA,UAAU,QAAhB,KACA,0BAAMA,UAAU,QAAhB,KACA,0BAAMA,UAAU,QAAhB,KACA,0BAAMA,UAAU,UAAhB,KACA,0BAAMA,UAAU,QAAhB,KACA,0BAAMA,UAAU,QAAhB,KACA,0BAAMA,UAAU,QAAhB,KACA,0BAAMA,UAAU,QAAhB,KACA,0BAAMA,UAAU,QAAhB,QAKN,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,gBACZ,kBAAC,IAAD,CAAMQ,GAAG,UACP,wBAAIR,UAAU,aAAd,UAEF,kBAAC,IAAD,CAAMQ,GAAG,cACP,wBAAIR,UAAU,aAAd,cAEF,kBAAC,IAAD,CAAMQ,GAAG,aACP,wBAAIR,UAAU,aAAd,aAEF,kBAAC,IAAD,CAAMQ,GAAG,aACP,wBAAIR,UAAU,aAAd,YAEF,kBAAC,IAAD,CAAMQ,GAAG,YACP,wBAAIR,UAAU,aAAd,oBC1DGS,G,MAVY,SAACC,GAC1B,OACE,4BAAQV,UAAU,gBAAgBW,QAASD,EAAME,GAC/C,yBAAKZ,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,mBCuCNa,G,MAxCI,SAACH,GAClB,OACE,4BAAQV,UAAU,WAChB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMQ,GAAG,KACP,sCACA,wCAGJ,yBAAKR,UAAU,WACf,yBAAKA,UAAU,qBACb,4BACE,kBAAC,IAAD,CAAMQ,GAAG,KACP,wBAAIR,UAAU,WAAd,SAEF,kBAAC,IAAD,CAAMQ,GAAG,UACP,wBAAIR,UAAU,WAAd,UAEF,kBAAC,IAAD,CAAMQ,GAAG,cACP,wBAAIR,UAAU,WAAd,cAEF,kBAAC,IAAD,CAAMQ,GAAG,aACP,wBAAIR,UAAU,WAAd,aAEF,kBAAC,IAAD,CAAMQ,GAAG,aACP,wBAAIR,UAAU,WAAd,YAEF,kBAAC,IAAD,CAAMQ,GAAG,YACP,wBAAIR,UAAU,WAAd,iBAIN,6BACE,kBAAC,EAAD,CAAoBY,EAAGF,EAAMI,oBCjCxBC,G,MAHE,SAACL,GAAD,OACf,yBAAKV,UAAU,WAAWW,QAASD,EAAMI,iBC2B5BE,G,MA7BI,SAACN,GAClB,IAAIO,EAAgB,aAKpB,OAJIP,EAAMQ,OACRD,EAAgB,mBAIhB,yBAAKjB,UAAWiB,GACd,4BACE,kBAAC,IAAD,CAAMT,GAAG,KACP,wBAAIR,UAAU,WAAd,SAEF,kBAAC,IAAD,CAAMQ,GAAG,cACP,wBAAIR,UAAU,WAAd,cAEF,kBAAC,IAAD,CAAMQ,GAAG,aACP,wBAAIR,UAAU,WAAd,aAEF,kBAAC,IAAD,CAAMQ,GAAG,aACP,wBAAIR,UAAU,WAAd,YAEF,kBAAC,IAAD,CAAMQ,GAAG,YACP,wBAAIR,UAAU,WAAd,mBCOKmB,G,MAzBA,WAAO,IAGhBC,EAHe,EACiBzB,oBAAS,GAD1B,mBACZ0B,EADY,KACAC,EADA,KAiBnB,OAJID,IACFD,EAAO,kBAAC,EAAD,CAAUN,aALU,WAC3BQ,GAAeD,OAQf,yBAAKrB,UAAU,OACb,kBAAC,EAAD,CAAYc,aAdU,WACxBQ,GAAeD,MAcb,kBAAC,EAAD,CAAYH,KAAMG,IACjBD,KC5BMG,EAAQ,CACnB,CAAEC,MAAO,uCAAwCC,OAAQ,kBACzD,CACED,MACE,wFACFC,OAAQ,8BAEV,CACED,MACE,sEACFC,OAAQ,qBAEV,CACED,MAAO,6DACPC,OAAQ,iBAEV,CACED,MAAO,oEACPC,OAAQ,gBAEV,CACED,MAAO,8DACPC,OAAQ,iBAEV,CACED,MACE,gFACFC,OAAQ,yBAEV,CACED,MAAO,qDACPC,OAAQ,gBAEV,CAAED,MAAO,gCAAiCC,OAAQ,oBAClD,CACED,MACE,2FACFC,OAAQ,qBAEV,CACED,MAAO,iDACPC,OAAQ,mBAEV,CACED,MACE,0GACFC,OAAQ,KAEV,CACED,MACE,gGACFC,OAAQ,yBAEV,CACED,MACE,iJACFC,OAAQ,yBAEV,CACED,MACE,iKACFC,OAAQ,0BCjDGC,EAVD,SAAChB,GAEb,OACE,yBAAKV,UAAU,oBACb,4BAAKU,EAAMc,MAAMA,MAAjB,KACA,2BAAId,EAAMc,MAAMC,UCuCPE,G,MA1CA,SAACjB,GAAW,IAAD,EACEf,mBAAS,GADX,mBACjBQ,EADiB,KACVyB,EADU,KAElBC,EAAUC,iBAAO,MA6BvB,OA3BAC,qBAAU,WACR,IAAIC,GACS,WACX,IAAIC,EAAQ,EACZD,EAAKE,aACL,WACMD,GAAS,IACXE,cAAcH,IAEdC,GAAgB,EAChBJ,EAAQO,QAAQnC,MAAMgC,MAAQA,EAAQ,OANlB,IAU1BI,GACA,IAAIC,EAAQC,YAAW,WACSX,EAA1BzB,EAAQoB,EAAMiB,OAAS,EAAYrC,EAAQ,EAEpC,KAEV,KACH,OAAO,WACLgC,cAAcH,GACdS,aAAaH,MAEd,CAACnC,IAGF,yBAAKH,UAAU,mBACb,kBAAC,EAAD,CAAOwB,MAAOD,EAAMpB,KAEpB,yBAAKH,UAAU,oBACb,yBAAK0C,IAAKb,EAAS7B,UAAU,gBCvBtB2C,G,MAZG,SAACjC,GACjB,OACE,yBAAKV,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,6CCGO4C,G,MAXD,SAAClC,GACb,OACE,yBAAKV,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,yCCSO6C,G,MAZE,SAACnC,GAChB,OACE,yBAAKV,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,4CCIO8C,G,MAXC,SAACpC,GACf,OACE,yBAAKV,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,4CCCO+C,EARC,WACd,OACE,6BACE,yC,MCoBSC,MAff,WACE,OACE,yBAAKhD,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiD,KAAK,aAAaC,UAAWP,IACpC,kBAAC,IAAD,CAAOM,KAAK,SAASC,UAAWN,IAChC,kBAAC,IAAD,CAAOK,KAAK,YAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,YAAYC,UAAWJ,IACnC,kBAAC,IAAD,CAAOG,KAAK,WAAWC,UAAWH,IAClC,kBAAC,IAAD,CAAOE,KAAK,IAAIC,UAAWxD,OCPfyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtE,QAAQsE,MAAMA,EAAMC,c","file":"static/js/main.78d6497c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EDIT-min.051843db.jpg\";","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport photo from \"../images/EDIT-min.jpg\";\r\nimport \"../css/Header.css\";\r\n\r\nconst Header = () => {\r\n  const [Loading, setLoading] = useState(false);\r\n  console.log(Loading);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-nav\">\r\n        <div className=\"header-photo-continer d\">\r\n          <div\r\n            className=\"img-skeleton\"\r\n            style={Loading ? { background: \"black\" } : { background: \"white\" }}\r\n          >\r\n            {Loading ? null : <Skeleton count={10} />}\r\n\r\n            <img\r\n              className=\"header-photo\"\r\n              onLoad={Loading ? null : setLoading(true)}\r\n              src={photo}\r\n              alt=\"profilepic\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"header-text d\">\r\n          <h1>\r\n            <span className=\"\">H</span>\r\n            <span className=\"\">i</span>\r\n            <span className=\"\">,</span>\r\n\r\n            <br />\r\n            <span className=\"\">I</span>\r\n            <span className=\"\">'</span>\r\n            <span className=\"\">m</span>\r\n            <span className=\"name f\">T</span>\r\n            <span className=\"name\">a</span>\r\n            <span className=\"name\">n</span>\r\n            <span className=\"name\">v</span>\r\n            <span className=\"name\">e</span>\r\n            <span className=\"name\">e</span>\r\n            <span className=\"name\">r</span>\r\n            <span className=\"name f\">A</span>\r\n            <span className=\"name\">h</span>\r\n            <span className=\"name\">a</span>\r\n            <span className=\"name\">m</span>\r\n            <span className=\"name\">e</span>\r\n            <span className=\"name\">d</span>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"header-links\">\r\n        <ul className=\"header-lists\">\r\n          <Link to=\"/about\">\r\n            <li className=\"list-item\">About</li>\r\n          </Link>\r\n          <Link to=\"/education\">\r\n            <li className=\"list-item\">Education</li>\r\n          </Link>\r\n          <Link to=\"/projects\">\r\n            <li className=\"list-item\">Projects</li>\r\n          </Link>\r\n          <Link to=\"/writings\">\r\n            <li className=\"list-item\">Writing</li>\r\n          </Link>\r\n          <Link to=\"/contact\">\r\n            <li className=\"list-item\">Contact Me</li>\r\n          </Link>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./DrawerToggleButton.css\";\r\nconst DrawerToggleButton = (props) => {\r\n  return (\r\n    <button className=\"toggle-button\" onClick={props.c}>\r\n      <div className=\"button-line\"></div>\r\n      <div className=\"button-line\"></div>\r\n      <div className=\"button-line\"></div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DrawerToggleButton;\r\n","import React from \"react\";\r\n\r\nimport DrawerToggleButton from \"./SideDrawer/DrawerToggleButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Responsive.css\";\r\n\r\nconst Responsive = (props) => {\r\n  return (\r\n    <header className=\"toolbar\">\r\n      <nav className=\"toolbar-nav\">\r\n        <div className=\"toolbar-logo\">\r\n          <Link to=\"/\">\r\n            <i>Tanveer</i>\r\n            <i> Ahamed</i>\r\n          </Link>\r\n        </div>\r\n        <div className=\"spacer\" />\r\n        <div className=\"toolbar-nav-items\">\r\n          <ul>\r\n            <Link to=\"/\">\r\n              <li className=\"ul-item\">Home</li>\r\n            </Link>\r\n            <Link to=\"/about\">\r\n              <li className=\"ul-item\">About</li>\r\n            </Link>\r\n            <Link to=\"/education\">\r\n              <li className=\"ul-item\">Education</li>\r\n            </Link>\r\n            <Link to=\"/projects\">\r\n              <li className=\"ul-item\">Projects</li>\r\n            </Link>\r\n            <Link to=\"/writings\">\r\n              <li className=\"ul-item\">Writing</li>\r\n            </Link>\r\n            <Link to=\"/contact\">\r\n              <li className=\"ul-item\">Contact Me</li>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <DrawerToggleButton c={props.clickHandler} />\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\nexport default Responsive;\r\n","import React from \"react\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = (props) => (\r\n  <div className=\"backdrop\" onClick={props.clickHandler}></div>\r\n);\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport \"./sidedrawer.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst SideDrawer = (props) => {\r\n  let drawerClasses = \"sidedrawer\";\r\n  if (props.show) {\r\n    drawerClasses = \"sidedrawer open\";\r\n  }\r\n\r\n  return (\r\n    <nav className={drawerClasses}>\r\n      <ul>\r\n        <Link to=\"/\">\r\n          <li className=\"ul-item\">Home</li>\r\n        </Link>\r\n        <Link to=\"/education\">\r\n          <li className=\"ul-item\">Education</li>\r\n        </Link>\r\n        <Link to=\"/projects\">\r\n          <li className=\"ul-item\">Projects</li>\r\n        </Link>\r\n        <Link to=\"/writings\">\r\n          <li className=\"ul-item\">Writing</li>\r\n        </Link>\r\n        <Link to=\"/contact\">\r\n          <li className=\"ul-item\">Contact Me</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport Responsive from \"./Responsive.js\";\r\n\r\nimport Backdrop from \"./SideDrawer/Backdrop\";\r\nimport SideDrawer from \"./SideDrawer/SideDrawer.js\";\r\nimport \"../css/Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [sideDrawer, setsideDrawer] = useState(false);\r\n\r\n  let back;\r\n\r\n  const drawerclickHandle = () => {\r\n    setsideDrawer(!sideDrawer);\r\n  };\r\n\r\n  const backdropclickHandler = () => {\r\n    setsideDrawer(!sideDrawer);\r\n  };\r\n\r\n  if (sideDrawer) {\r\n    back = <Backdrop clickHandler={backdropclickHandler} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"edu\">\r\n      <Responsive clickHandler={drawerclickHandle} />\r\n      <SideDrawer show={sideDrawer} />\r\n      {back}\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","export const quots = [\r\n  { quote: '\"Change the world by being yourself\"', author: \"-- Mark Twain.\" },\r\n  {\r\n    quote:\r\n      '\"A man\\'s mind, stretched by new ideas, may never return to its original dimensions.\"',\r\n    author: \"-Oliver Wendell Holmes Jr.\",\r\n  },\r\n  {\r\n    quote:\r\n      '\"Anyone who has never made a mistake has never tried anything new.\"',\r\n    author: \"-Albert Einstein.\",\r\n  },\r\n  {\r\n    quote: '\"Start where you are. Use what you have. Do what you can.\"',\r\n    author: \"-Arthur Ashe.\",\r\n  },\r\n  {\r\n    quote: '\"Your attitude, not your aptitude, will determine your altitude.\"',\r\n    author: \"-Zig Ziglar.\",\r\n  },\r\n  {\r\n    quote: '\"An investment in knowledge always pays the best interest.\"',\r\n    author: \"-Ben Franklin\",\r\n  },\r\n  {\r\n    quote:\r\n      '\"If people did not do silly things, nothing intelligent would ever get done.\"',\r\n    author: \"-Ludwig Wittgenstein.\",\r\n  },\r\n  {\r\n    quote: '\"Remember that failure is an event, not a person.\"',\r\n    author: \"-Zig Ziglar.\",\r\n  },\r\n  { quote: '\"To teach is to learn twice.\"', author: \"-Joseph Joubert.\" },\r\n  {\r\n    quote:\r\n      '\"Do not confine your children to your own learning, for they were born in another time.\"',\r\n    author: \"-Chinese proverb.\",\r\n  },\r\n  {\r\n    quote: '\"What we learn with pleasure we never forget.\"',\r\n    author: \"-Arnold Glasow.\",\r\n  },\r\n  {\r\n    quote:\r\n      '\"The key to everything is patience. You get the chicken by hatching the egg — not by smashing it.\"',\r\n    author: \"-\",\r\n  },\r\n  {\r\n    quote:\r\n      '\"Dream is not that which you see while sleeping it is something that does not let you sleep.\"',\r\n    author: \"-Dr. APJ Abdul Kalam.\",\r\n  },\r\n  {\r\n    quote:\r\n      '\"Don\\'t take rest after your first victory because if you fail in second, more lips are waiting to say that your first victory was just luck.\"',\r\n    author: \"-Dr. APJ Abdul Kalam.\",\r\n  },\r\n  {\r\n    quote:\r\n      '\"In life no one will remember how you looked,walked,talked or what you did.Everyone will remember you by the way you made THEM FEEL when they where with you.\"',\r\n    author: \"-Dr. APJ Abdul Kalam.\",\r\n  },\r\n];\r\n","import React from \"react\";\r\n\r\nconst Quots = (props) => {\r\n  // console.log(props.quote.quote);\r\n  return (\r\n    <div className=\"slider-quot quot\">\r\n      <h1>{props.quote.quote} </h1>\r\n      <p>{props.quote.author}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quots;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { quots } from \"../data/quots.js\";\r\nimport Quote from \"./Quots.js\";\r\nimport \"../css/Slider.css\";\r\nconst Slider = (props) => {\r\n  const [count, setCount] = useState(0);\r\n  const loadRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let id;\r\n    const move = () => {\r\n      var width = 1;\r\n      id = setInterval(frame, 70);\r\n      function frame() {\r\n        if (width >= 100) {\r\n          clearInterval(id);\r\n        } else {\r\n          width = width + 1;\r\n          loadRef.current.style.width = width + \"%\";\r\n        }\r\n      }\r\n    };\r\n    move();\r\n    let timer = setTimeout(() => {\r\n      if (count < quots.length - 1) setCount(count + 1);\r\n      else {\r\n        setCount(0);\r\n      }\r\n    }, 7000);\r\n    return () => {\r\n      clearInterval(id);\r\n      clearTimeout(timer);\r\n    };\r\n  }, [count]);\r\n\r\n  return (\r\n    <div className=\"slider-continer\">\r\n      <Quote quote={quots[count]} />\r\n\r\n      <div className=\"loding-indicator\">\r\n        <div ref={loadRef} className=\"loading\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Slider from \"./Slider\";\r\nimport \"../css/Education.css\";\r\n\r\nconst Education = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <Slider />\r\n      <div className=\"card\">\r\n        <h1>Education</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../css/About.css\";\r\nconst About = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <div className=\"card\">\r\n        <h1>about</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Slider from \"./Slider\";\r\nimport \"../css/Projects.css\";\r\n\r\nconst Projects = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <Slider />\r\n      <div className=\"card\">\r\n        <h1>Projects</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../css/Writing.css\";\r\n\r\nconst Writing = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <div className=\"card\">\r\n        <h1>Writings</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Writing;\r\n","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <h1>Contact</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Education from \"./Education\";\nimport About from \"./About\";\nimport Projects from \"./Projects\";\nimport Writing from \"./Writing\";\nimport Contact from \"./Contact\";\nimport \"../css/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/education\" component={Education} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/writings\" component={Writing} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/\" component={Header} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./css/index.css\";\nimport App from \"./component/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}